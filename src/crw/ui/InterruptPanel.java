/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package crw.ui;

import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import sami.engine.Engine;
import sami.engine.PlanManager;
import sami.engine.PlanManagerListenerInt;
import sami.mission.InterruptType;
import sami.mission.MissionPlanSpecification;
import sami.mission.Place;
import sami.proxy.ProxyInt;
import sami.proxy.ProxyServerListenerInt;

/**
 *
 * @author Nicol√≤ Marchi <marchi.nicolo@gmail.com>
 */
public class InterruptPanel extends javax.swing.JPanel implements PlanManagerListenerInt, ProxyServerListenerInt {

    DefaultListModel lModelPlans = new DefaultListModel();
    DefaultListModel lModelBoats = new DefaultListModel();
    HashMap<String, PlanManager> nameToPlan = new HashMap<String, PlanManager>();
    HashMap<String, ProxyInt> nameToProxy = new HashMap<String, ProxyInt>();

    ArrayList<ProxyInt> boatsSelected = null;
    PlanManager pmSelected = null;

    /**
     * Creates new form InterruptPanel
     */
    public InterruptPanel() {

        Engine.getInstance().addListener(this);
        Engine.getInstance().getProxyServer().addListener(this);

        initComponents();

        boatsSelected = new ArrayList<ProxyInt>();
        boatsL.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        lModelPlans.addElement("No running Plans");
        plansL.setModel(lModelPlans);

        lModelBoats.addElement("No Boats");
        boatsL.setModel(lModelBoats);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        plansL = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        proxyIntB = new javax.swing.JButton();
        genericIntB = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        boatsL = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();

        jLabel1.setText("Executing Plans List");

        plansL.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        plansL.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                plansLValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(plansL);

        jLabel2.setText("Boats");

        proxyIntB.setText("Send Proxy Interrupt");
        proxyIntB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proxyIntBActionPerformed(evt);
            }
        });

        genericIntB.setText("Send Generic Interrupt");
        genericIntB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genericIntBActionPerformed(evt);
            }
        });

        boatsL.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        boatsL.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                boatsLValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(boatsL);

        jLabel3.setText("Interrupt to Send");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(proxyIntB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(genericIntB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(384, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(2, 2, 2)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(genericIntB, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(proxyIntB, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(22, 22, 22)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addGap(425, 425, 425)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void genericIntBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genericIntBActionPerformed
        // TODO add your handling code here:
//        System.out.println("Count of listeners: " + ((JButton) evt.getSource()).getActionListeners().length);
        if (pmSelected != null) {
            pmSelected.enterInterruptPlace(InterruptType.GENERAL, null);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a plan to send the interrupt.");
        }
    }//GEN-LAST:event_genericIntBActionPerformed

    private void boatsLValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_boatsLValueChanged

        if (boatsL.getValueIsAdjusting()) {
            boatsSelected = new ArrayList<ProxyInt>();

            for (Object o : boatsL.getSelectedValuesList()) {
                String s = (String) o;
                boatsSelected.add(nameToProxy.get(s));

            }

        }
    }//GEN-LAST:event_boatsLValueChanged

    private void plansLValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_plansLValueChanged
        // TODO add your handling code here:
        String s = (String) plansL.getSelectedValue();

        pmSelected = nameToPlan.get(s);
    }//GEN-LAST:event_plansLValueChanged

    private void proxyIntBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proxyIntBActionPerformed
        // TODO add your handling code here:
//        System.out.println("Count of listeners: " + ((JButton) evt.getSource()).getActionListeners().length);
        if (pmSelected != null && boatsSelected != null) {
            pmSelected.enterInterruptPlace(InterruptType.PROXY, boatsSelected);
//            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a plan and a boat to send the interrupt.");
        }
    }//GEN-LAST:event_proxyIntBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList boatsL;
    private javax.swing.JButton genericIntB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList plansL;
    private javax.swing.JButton proxyIntB;
    // End of variables declaration//GEN-END:variables

    public void planCreated(PlanManager planManager, MissionPlanSpecification mSpec) {
        nameToPlan.put(planManager.getPlanName(), planManager);

        if (((String) plansL.getModel().getElementAt(0)).equals("No running Plans")) {
            ((DefaultListModel) plansL.getModel()).remove(0);
        }

        ((DefaultListModel) plansL.getModel()).addElement(planManager.getPlanName());
        this.repaint();

//        plansL.updateUI();
    }

    public void planStarted(PlanManager planManager) {
    }

    public void planEnteredPlace(PlanManager planManager, Place place) {
    }

    public void planLeftPlace(PlanManager planManager, Place place) {
    }

    public void planFinished(PlanManager planManager) {

        for (int i = 0; i < plansL.getModel().getSize(); i++) {
            if (((String) ((DefaultListModel) plansL.getModel()).getElementAt(i)).equals(planManager.getPlanName())) {
                ((DefaultListModel) plansL.getModel()).remove(i);
            }
        }
        nameToPlan.remove(planManager.getPlanName());

        if (nameToPlan.isEmpty()) {
            ((DefaultListModel) plansL.getModel()).addElement("No running Plans");
        }
        this.repaint();

    }

    public void planAborted(PlanManager planManager) {

        for (int i = 0; i < plansL.getModel().getSize(); i++) {
            if (((String) ((DefaultListModel) plansL.getModel()).getElementAt(i)).equals(planManager.getPlanName())) {
                ((DefaultListModel) plansL.getModel()).remove(i);
            }
        }
        nameToPlan.remove(planManager.getPlanName());

        if (nameToPlan.isEmpty()) {
            ((DefaultListModel) plansL.getModel()).addElement("No running Plans");
        }
        this.repaint();

    }

    public void proxyAdded(ProxyInt p) {

        if (nameToProxy.isEmpty() && (((DefaultListModel) boatsL.getModel()).get(0)) != null) {
            ((DefaultListModel) boatsL.getModel()).remove(0);
        }

        ((DefaultListModel) boatsL.getModel()).addElement(p.getProxyName());
        nameToProxy.put(p.getProxyName(), p);

        this.repaint();

    }

    public void proxyRemoved(ProxyInt p) {

        ((DefaultListModel) boatsL.getModel()).removeElement(p.getProxyName());
        nameToProxy.remove(p.getProxyName());

        if (nameToProxy.isEmpty()) {
            ((DefaultListModel) boatsL.getModel()).addElement("No Boats");
        }
        this.repaint();
    }
}
